{"version":3,"sources":["shared/fetch.tsx","pages/note/components/Card.tsx","components/tag-input/index.tsx","pages/note/components/WriteNote.tsx","pages/note/note.tsx","pages/home.tsx","layout/nav.tsx","shared/App.tsx","clinet/root.tsx","index.tsx","components/tag-input/style.module.css"],"names":["cFetch","type","api","body","disableMessage","a","fetch","baseUrl","res","method","JSON","stringify","headers","status","alert","json","Card","noteList","className","title","style","margin","tags","map","row","href","tag","modifiedAt","slice","content","TagInput","required","setTags","maxTags","useState","inputData","setInputData","tagsKeys","Object","keys","position","paddingRight","length","value","data-testid","onChange","e","target","onKeyPress","key","preventDefault","addedTags","split","word","trim","replace","filter","reduce","obj","newTags","top","right","onClick","styles","role","tabIndex","tagName","dataset","onInvalid","setCustomValidity","opacity","data-tag","modules","toolbar","container","header","font","size","list","indent","clipboard","matchVisual","formats","WriteNote","isActive","setIsActive","password","setPassword","noteData","setNoteData","tagInputValue","setTagInputValue","chagneEditor","setChangeEditor","onActiveControl","width","placeholder","dataType","aria-label","theme","disabled","Note","tagList","setTagList","setNoteList","openWrite","setOpenWrite","currentTag","setCurrentTag","getNoteListCB","useCallback","getTagListCB","undefined","tist","console","log","handleCurrentChange","useEffect","color","cursor","padding","i","count","r","Home","Nav","to","rel","process","App","exact","path","component","Root","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6d32099d.chunk.js","sourcesContent":["import { baseUrl } from '../shared/App'\n\nexport default async function cFetch(\n    type: 'GET' | 'POST' | 'PUT' | 'DELETE',\n    api: string,\n    body?: { [index: string]: any },\n    disableMessage?: boolean\n) {\n    let res: any\n    if (type === 'GET') {\n        res = await fetch(baseUrl + api)\n    } else {\n        fetch(baseUrl + api, {\n            method: type,\n            body: body && JSON.stringify(body),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n    }\n\n    if (res.status >= 400) {\n        alert(`error : ${res.status}`)\n    } else if (res.status < 400 && disableMessage) {\n        alert(`succcess`)\n    }\n\n    return res.json()\n}\n","import React from 'react'\nimport { NoteDto } from '../note'\n\nexport default function Card({ noteList }: { noteList: NoteDto }) {\n    return (\n        <>\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title\">{noteList.title}</p>\n                    <p style={{ margin: 10 }}>\n                        {noteList &&\n                            noteList.tags.map((row) => (\n                                <small>\n                                    <a href={`#${row.tag}`}>#{row.tag}</a>&nbsp;\n                                </small>\n                            ))}\n                    </p>\n                    <br />\n                    <p style={{ margin: 10 }}>\n                        {noteList.modifiedAt.slice(0, 10)}\n                    </p>\n                </header>\n                <div className=\"card-content\">\n                    <div className=\"content\">{noteList.content}</div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport styles from './style.module.css';\n\ninterface Tags {\n  [index: string]: boolean;\n}\n\ninterface TagInputProps {\n  required: boolean;\n  tags: Tags;\n  setTags: React.Dispatch<React.SetStateAction<Tags>>;\n  maxTags: number;\n}\n\nfunction TagInput({ required, tags, setTags, maxTags }: TagInputProps) {\n  const [inputData, setInputData] = useState('');\n  const tagsKeys = Object.keys(tags);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <input\n        style={{ paddingRight: '120px' }}\n        className=\"input\"\n        type=\"text\"\n        required={required && tagsKeys.length === 0}\n        value={inputData}\n        data-testid=\"tag-input-box\"\n        onChange={(e) => {\n          setInputData(e.target.value);\n        }}\n        onKeyPress={(e) => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            const addedTags = inputData\n              .split(',')\n              .map((word) => word.trim().replace(/\\s+/g, ' '))\n              .filter((word) => word && !tags[word])\n              .reduce((obj, word) => ({ ...obj, [word]: true }), {});\n\n            const newTags = { ...tags, ...addedTags };\n            if (Object.keys(newTags).length > maxTags) {\n              alert(`${maxTags}개까지만 입력 가능합니다.`);\n              return;\n            }\n\n            setTags(newTags);\n            setInputData('');\n          }\n        }}\n      />\n      <div style={{ position: 'absolute', top: '5px', right: '5px' }}>\n        <span className=\"content has-text-grey-light is-size-7\">\n          {tagsKeys.length} 개\n        </span>\n        &nbsp;\n        <button\n          className=\"button is-small is-danger\"\n          type=\"button\"\n          onClick={() => setTags({})}\n        >\n          전체 삭제\n        </button>\n      </div>\n      <div\n        className={styles.tags}\n        role=\"button\"\n        data-testid=\"tag-container\"\n        tabIndex={0}\n        onClick={(e) => {\n          const target = e.target as HTMLSpanElement;\n          if (target.tagName !== 'SPAN') return;\n\n          const newTags = { ...tags };\n          const tag = target.dataset.tag ?? '';\n          delete newTags[tag];\n          setTags(newTags);\n        }}\n      >\n        {required && (tagsKeys.length === 0 || inputData.length > 0) && (\n          <input\n            type=\"checkbox\"\n            required\n            onInvalid={(e) => {\n              const target = e.target as HTMLInputElement;\n              target.setCustomValidity('태그 작성 후, 엔터를 입력하세요.');\n            }}\n            style={{ position: 'absolute', opacity: 0 }}\n          />\n        )}\n        {Object.keys(tags).map((tag) => (\n          <span className={styles.tag} key={tag} data-tag={tag}>\n            {tag} &times;\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TagInput;","import React, { Dispatch, SetStateAction, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport TagInput from '../../../components/tag-input'\nimport 'react-quill/dist/quill.snow.css'\nimport cFetch from '../../../shared/fetch'\n\ninterface Tags {\n    [index: string]: boolean\n}\n\ninterface NoteDataInterFace {\n    title: string\n    tag: string[]\n    content: string\n}\n\nconst modules = {\n    toolbar: {\n        container: [\n            [{ header: '1' }, { header: '2' }, { font: [] }],\n            [{ size: [] }],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [\n                { list: 'ordered' },\n                { list: 'bullet' },\n                { indent: '-1' },\n                { indent: '+1' },\n            ],\n            ['link', 'image', 'video'],\n        ],\n        // container:  [['bold', 'italic', 'underline', 'blockquote'],\n        // [{'list': 'ordered'}, {'list': 'bullet'}],\n        // ['formula','link', 'image'],\n        // ['clean']],\n        // handlers: { 'image' : this.handleImage }\n    },\n    clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n    },\n    // imageDrop: true, // imageDrop 등록\n    // imageResize: {} // imageResize 등록\n}\n\nconst formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'indent',\n    'link',\n    'image',\n    'video',\n]\n\nexport default function WriteNote({\n    isActive,\n    setIsActive,\n}: {\n    isActive: boolean\n    setIsActive: Dispatch<SetStateAction<boolean>>\n}) {\n    const [password, setPassword] = useState<string>('')\n    const [noteData, setNoteData] = useState<NoteDataInterFace>(\n        {} as NoteDataInterFace\n    )\n    const [tagInputValue, setTagInputValue] = useState<Tags>({} as Tags)\n    const [chagneEditor, setChangeEditor] = useState<string>('')\n\n    function onActiveControl() {\n        setIsActive(!isActive)\n        setTagInputValue({})\n    }\n\n    function onHandleNoteData(dataType: string, value: string) {\n        setNoteData({\n            ...noteData,\n            [dataType]: value,\n        })\n    }\n\n    async function onSubmitNoteData() {\n        cFetch('POST', 'note', {\n            title: noteData.title,\n            content: chagneEditor,\n            tag: Object.keys(tagInputValue),\n        })\n        setIsActive(!isActive)\n    }\n\n    return (\n        <>\n            <div className={`modal ${isActive && 'is-active'}`}>\n                <div className=\"modal-background\" onClick={onActiveControl} />\n                <div className=\"modal-card\" style={{ width: 1000 }}>\n                    <header className=\"modal-card-head\">\n                        <p className=\"modal-card-title\">\n                            <input\n                                className=\"input\"\n                                placeholder=\"Modal title\"\n                                style={{ width: '95%' }}\n                                value={noteData.title || ''}\n                                onChange={(e) =>\n                                    onHandleNoteData('title', e.target.value)\n                                }\n                            />\n                        </p>\n                        <button\n                            className=\"delete\"\n                            aria-label=\"close\"\n                            type=\"button\"\n                            onClick={onActiveControl}\n                        ></button>\n                    </header>\n                    <section className=\"modal-card-body\">\n                        <div className=\"field is-horizontal\">\n                            <span className=\"span mt-1\">Tags : &nbsp;</span>\n                            <div className=\"field-body\">\n                                <div className=\"field\">\n                                    <TagInput\n                                        required={true}\n                                        tags={tagInputValue}\n                                        setTags={setTagInputValue}\n                                        maxTags={5}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <ReactQuill\n                            // ref={(el) => (quillRef = el)}\n                            value={chagneEditor} // state 값\n                            theme=\"snow\" // 테마값 이미 snow.css를 로드해서 제거해도 무망\n                            onChange={(e) => setChangeEditor(e)}\n                            modules={modules}\n                            formats={formats}\n                            placeholder={'아무거나 입력해 주세요'}\n                        />\n                        '\n                    </section>\n                    <footer className=\"modal-card-foot\">\n                        <input\n                            className=\"input is-warning mr-3\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <button\n                            className=\"button is-success\"\n                            disabled={password !== 'notepw'}\n                            type=\"button\"\n                            onClick={onSubmitNoteData}\n                        >\n                            Save\n                        </button>\n                        <button\n                            className=\"button\"\n                            type=\"button\"\n                            onClick={onActiveControl}\n                        >\n                            Cancel\n                        </button>\n                    </footer>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport cFetch from '../../shared/fetch'\nimport Card from './components/Card'\nimport WriteNote from './components/WriteNote'\n\nexport interface NoteDto {\n    content: string\n    createdAt: string\n    modifiedAt: string\n    postNumber: number\n    tags: { id: string; tag: string }[]\n    title: string\n}\n\ninterface TagDto {\n    tag: string\n    count: string\n}\n\nexport default function Note() {\n    const [tagList, setTagList] = useState<TagDto[]>([])\n    const [noteList, setNoteList] = useState<NoteDto[]>([])\n    const [openWrite, setOpenWrite] = useState<boolean>(false)\n    const [currentTag, setCurrentTag] = useState<string>('TOTAL')\n\n    const getNoteListCB = useCallback(getNoteList, [])\n    const getTagListCB = useCallback(getTagList, [])\n\n    async function getNoteList() {\n        setNoteList(await cFetch('GET', 'note', undefined, false))\n    }\n\n    async function getTagList() {\n        const tist = (\n            await cFetch('GET', 'note/tagList', undefined, false)\n        ).slice(undefined, 5)\n        console.log(tist)\n        setTagList(tist)\n    }\n\n    useEffect(() => {\n        getNoteListCB()\n        getTagListCB()\n    }, [getNoteListCB, getTagListCB])\n\n    function handleCurrentChange(type: string) {\n        setCurrentTag(type)\n    }\n\n    return (\n        <div>\n            <WriteNote isActive={openWrite} setIsActive={setOpenWrite} />\n            <div className=\"container\">\n                <div className=\"columns\">\n                    <div className=\"column is-2\">\n                        <aside className=\"menu\">\n                            <p className=\"menu-label\">Tag</p>\n                            <ul className=\"menu-list\">\n                                <li>\n                                    <a\n                                        href={`#TOTAL`}\n                                        style={{\n                                            color:\n                                                currentTag === 'TOTAL'\n                                                    ? '#00d2b4'\n                                                    : 'black',\n                                            cursor: 'pointer',\n                                            padding: '2px 15px 2px 15px',\n                                        }}\n                                        onClick={() =>\n                                            handleCurrentChange('TOTAL')\n                                        }\n                                    >\n                                        TOTAL\n                                    </a>\n                                </li>\n                                {tagList.map((tag, i) => (\n                                    <li key={i}>\n                                        <a\n                                            href={`#${tag.tag}`}\n                                            style={{\n                                                color:\n                                                    currentTag === tag.tag\n                                                        ? '#00d2b4'\n                                                        : 'black',\n                                                cursor: 'pointer',\n                                                padding: '2px 15px 2px 15px',\n                                            }}\n                                            onClick={() =>\n                                                handleCurrentChange(tag.tag)\n                                            }\n                                        >\n                                            {`${tag.tag} (${tag.count})`}\n                                        </a>\n                                    </li>\n                                ))}\n                            </ul>\n                            <p className=\"menu-label\">Administration</p>\n                            <ul className=\"menu-list\">\n                                <li>\n                                    <a\n                                        href={'#write'}\n                                        onClick={() => setOpenWrite(true)}\n                                    >\n                                        Write Note\n                                    </a>\n                                </li>\n                            </ul>\n                        </aside>\n                    </div>\n                    <div className=\"column\">\n                        {(currentTag === 'TOTAL'\n                            ? noteList\n                            : noteList.filter(\n                                  (row) =>\n                                      row.tags.filter(\n                                          (r) => r.tag === currentTag\n                                      ).length > 0\n                              )\n                        ).map((row) => (\n                            <div\n                                style={{\n                                    margin: '20px auto',\n                                    width: '70%',\n                                }}\n                            >\n                                <Card noteList={row} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function Home() {\n\n    return (\n        <div>Tanktwo's Note</div>\n    )\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Nav() {\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <Link className=\"navbar-item\" to=\"/ttb_frontend\">\n                        Home\n                    </Link>\n                    <Link className=\"navbar-item\" to=\"/ttb_frontend/note\">\n                        Note\n                    </Link>\n                </div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"field is-grouped\">\n                            <p className=\"control\">\n                                <a\n                                    className=\"bd-navbar-icon navbar-item\"\n                                    href=\"https://github.com/TankTwo2/ttb_frontend\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    <span\n                                        className=\"icon\"\n                                        // style={{ color: 'var(--github)' }}\n                                    >\n                                        <i className=\"fab fa-lg fa-github-alt\" />\n                                    </span>\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport Note from '../pages/note/note'\nimport Home from '../pages/home'\nimport Nav from '../layout/nav'\nexport const baseUrl = process.env.REACT_APP_API_URL\n\nfunction App() {\n    console.log(process.env)\n\n    return (\n        <div className=\"App\">\n            <div className=\"container is-fluid\">\n                <Nav />\n                <Route exact path=\"/ttb_frontend/\" component={Home} />\n                <Route exact path=\"/ttb_frontend/note\" component={Note} />\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from '../shared/App';\n\nconst Root = () => (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './clinet/root';\n\nReactDOM.render(<Root />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"style_tags__3M0sG\",\"tag\":\"style_tag__32DV4\"};"],"sourceRoot":""}